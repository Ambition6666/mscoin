syntax = "proto3";

package market;

// protoc-gen-go 版本大于1.4.0, proto文件需要加上go_package,否则无法生成
option go_package = "./market";

message MarketReq {
  string ip = 1;
  string symbol = 2;
  string unit = 3;
  int64 from = 4;
  int64 to = 5;
  string resolution = 6;
  int64 id = 7;
}
message SymbolThumbRes{
  repeated CoinThumb list = 1;
}
message CoinThumb {
  string symbol = 1;
  double open = 2;
  double high = 3;
  double low = 4;
  double close = 5;
  double chg = 6;
  double change = 7;
  double volume = 8;
  double turnover = 9;
  double lastDayClose = 10;
  double usdRate = 11;
  double baseUsdRate = 12;
  double zone = 13;
  repeated double trend = 14;
}

message ExchangeCoin {
  int64 id  = 1;
  string symbol  = 2;
  int32 baseCoinScale  = 3;
  string baseSymbol  = 4;
  int32 coinScale  = 5;
  string coinSymbol  = 6;
  int32 enable  = 7;
  double fee  = 8;
  int32 sort  = 9;
  int32 enableMarketBuy  = 10;
  int32 enableMarketSell  = 11;
  double minSellPrice  = 12;
  int32 flag  = 13;
  int32 maxTradingOrder  = 14;
  int32 maxTradingTime  = 15;
  double minTurnover  = 16;
  int64 clearTime  = 17;
  int64 endTime  = 18;
  int32 exchangeable  = 19;
  double maxBuyPrice  = 20;
  double maxVolume  = 21;
  double minVolume  = 22;
  double publishAmount  = 23;
  double publishPrice  = 24;
  int32 publishType  = 25;
  int32 robotType  = 26;
  int64 startTime  = 27;
  int32 visible  = 28;
  int32 zone  = 29;
}


message Coin{
  int32 id  = 1;
  string name  = 2;
  int32 canAutoWithdraw  = 3;
  int32 canRecharge  = 4;
  int32 canTransfer  = 5;
  int32 canWithdraw  = 6;
  double cnyRate  = 7;
  int32 enableRpc  = 8;
  int32 isPlatformCoin  = 9;
  double maxTxFee  = 10;
  double maxWithdrawAmount  = 11;
  double minTxFee  = 12;
  double minWithdrawAmount  = 13;
  string nameCn  = 14;
  int32 sort  = 15;
  int32 status  = 16;
  string unit  = 17;
  double usdRate  = 18;
  double withdrawThreshold  = 19;
  int32 hasLegal  = 20;
  string coldWalletAddress  = 21;
  double minerFee  = 22;
  int32 withdrawScale  = 23;
  int32 accountType  = 24;
  string depositAddress  = 25;
  string infolink  = 26;
  string information  = 27;
  double minRechargeAmount  = 28;
}

message History {
  int64 time = 1;
  double open = 2;
  double close = 3;
  double high = 4;
  double low = 5;
  double volume = 6;
}
message HistoryRes {
  repeated History list = 1;
}

message ExchangeCoinRes {
  repeated ExchangeCoin list = 1;
}

message CoinList {
  repeated Coin list = 1;
}

service Market {
  rpc FindSymbolThumb(MarketReq) returns(SymbolThumbRes);
  rpc FindSymbolThumbTrend(MarketReq) returns(SymbolThumbRes);
  rpc FindSymbolInfo(MarketReq) returns(ExchangeCoin);
  rpc FindCoinInfo(MarketReq) returns(Coin);
  rpc HistoryKline(MarketReq) returns(HistoryRes);
  rpc FindVisibleExchangeCoins(MarketReq) returns (ExchangeCoinRes);
  rpc FindAllCoin(MarketReq) returns (CoinList);
  rpc FindCoinById(MarketReq) returns (Coin);
}